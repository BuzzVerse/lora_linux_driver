#!/usr/bin/env python3
import sys

def formatNumber(number: int, base: str):
    base = base.lower()
    if base == "dec":
        return formatDec(number)
    elif base == "hex":
        return formatHex(number)
    elif base == "bin":
        return formatBin(number)
    else:
        print("Wrong base.")

def formatDec(number: int) -> str:
    return f"{number}"

def formatHex(number: int) -> str:
    return "0x" + f"{number:x}".upper()

def formatBin(number: int) -> str:
    string = [x for x in f"{number:b}"]

    while len(string) % 8 != 0:
        string.insert(0, "0")

    return "0b" + "".join(string)
    
def to_dec(number: str) -> int:
    inputBase = 10

    if len(number) < 3 or number[1].isdigit():
        pass
    elif number[1] == 'x':
        inputBase = 16
    elif number[1] == 'b':
        inputBase = 2
    else:
        print("Syntax error.")
    
    return int(number, base=inputBase)

if len(sys.argv) == 3:
    number = to_dec(sys.argv[1])
    base = sys.argv[2]
    print(formatNumber(number, base))

else:
    print("Incorrect arguments.")
    print("hex_to_bin {#|0x#|0b#} {dec|hex|bin}")

